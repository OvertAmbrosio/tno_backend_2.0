{"version":3,"sources":["config/theme.js","components/common/Titulo.jsx","views/dashboard.jsx","config/constantes.js","services/requestHelper.js","services/apiNovelas.js","components/common/Dialogo.jsx","components/novelas/Etiquetas.jsx","services/apiExtras.js","components/novelas/FormularioNovela.jsx","components/novelas/AcordionTemplate.jsx","components/novelas/AcordionDetalles.jsx","components/novelas/ActivarNovela.jsx","components/novelas/ListaImagenes.jsx","components/novelas/ListaCapitulos.jsx","services/apiCapitulos.js","services/apiImagenes.js","views/novelas/editar.jsx","components/capitulos/TablaCapitulos.jsx","views/novelas/capitulos.jsx","components/imagenes/DialogoImagen.jsx","components/imagenes/TablaImagenes.jsx","views/novelas/imagenes.jsx","components/capitulos/FormularioCapitulo.jsx","views/capitulos/crear.jsx","views/capitulos/editar.jsx","views/imagenes/crear.jsx","components/extras/FormularioExtra.jsx","views/extras/index.jsx","routes.js","views/novelas/index.jsx","views/novelas/crear.jsx","views/capitulos/index.jsx","views/imagenes/index.jsx","components/common/Copyright.jsx","components/layout/stylesLayout.js","services/apiUsuario.js","components/layout/Toolbar.jsx","components/layout/ListaMenu.jsx","components/layout/LeftBar.jsx","components/layout/index.jsx","components/common/PrivateLayout.jsx","views/index.jsx","services/authToken.js","views/login.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","Titulo","props","Typography","style","marginBottom","flexGrow","component","variant","color","noWrap","children","Dashboard","restAuth","config","a","closeLoading","cogoToast","loading","hideAfter","position","role","newAxiosRequest","axios","create","baseURL","constantes","then","data","hide","success","message","errors","Error","catch","err","response","console","log","errData","warn","undefined","request","restPrivate","headers","Authorization","Cookie","get","status","String","remove","document","location","href","getNovelas","params","url","method","getNovela","id","postNovelas","patchNovelas","metodo","Metodo","deleteNovela","idNovela","Transition","React","forwardRef","ref","Slide","direction","Dialogo","visible","abrir","titulo","cuerpo","accion","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","delimiters","Etiquetas","sugerencias","etiquetas","guardar","margin","ReactTags","tags","suggestions","handleDelete","i","filter","tag","index","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","autofocus","inputFieldPosition","getExtras","getExtra","tipo","postExtra","patchExtra","deleteExtra","FormularioNovela","novela","useState","tipos","setTipos","categorias","setCategorias","setEtiquetas","titulo_alt","acron","autor","sinopsis","observacion","estado","objNovela","setObjNovela","length","e","map","nombre","text","useEffect","cargarExtras","Object","entries","guardarNovela","preventDefault","autoComplete","marginRight","onSubmit","TextField","required","fullWidth","label","value","onChange","target","select","helperText","MenuItem","key","List","c","ListItem","dense","button","currentIndex","indexOf","newChecked","push","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","multiline","rows","placeholder","type","useStyles","makeStyles","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","AcordionTemplate","abierto","subtitulo","panel","classes","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","className","AccordionDetails","minWidth","title","pos","AcordionDetalles","Card","CardContent","gutterBottom","subidoPor","username","actualizadoPor","createdAt","moment","format","updatedAt","rating","contador","valor","ActivarNovela","activar","activo","green","ListaImagenes","imagenes","actualizarImagen","imagenSeleccionada","setImagenSeleccionada","setTipo","guardarImagen","img","contentType","FormControl","InputLabel","Select","labelId","imagen","FormHelperText","backgroundColor","paper","ListaCapitulos","capitulos","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","_id","aria-label","aria-haspopup","event","currentTarget","capitulo_emision","numero","Menu","Boolean","capitulo","selected","handleMenuItemClick","getCapitulo","idCapitulo","getCapitulos","page","limit","getCapitulosNovela","getCapitulosLista","postCapitulo","patchCapitulo","deleteCapitulo","getImages","getImagesNovel","getImagesLista","getImage","postImagen","deleteImagen","idImagen","keyImg","withRouter","match","history","useHistory","setNovela","setCapitulos","setImagenes","setAbierto","chapter","image","extencion","cargarNovela","cargarListaCapitulos","cargarListaImagenes","isExpanded","TablaCapitulos","listaCapitulos","total","rowsPerPage","cambiarPagina","cambiarLimite","borrarCapitulo","capituloTitulo","setCapituloTitulo","setIdCapitulo","dialogoVisible","setDialogoVisible","abrirDialogo","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","ButtonGroup","size","Link","to","Edit","cyan","idCap","Delete","height","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","SelectProps","native","onChangePage","onChangeRowsPerPage","setListaCapitulos","setPage","setRowsPerPage","setTotal","cargarCapitulos","p","l","n","docs","totalDocs","Number","newPage","limite","parseInt","startIcon","AddCircle","DialogoImagen","alto","setAlto","ancho","setAncho","Image","src","onload","this","CircularProgress","CardMedia","autoFocus","TablaImagenes","listaImagenes","borrarImagen","imagenTitulo","setImagenTitulo","setIdImagen","keyImagen","setKeyImagen","detalleVisible","setDetalleVisible","loadingImagen","setLoadingImagen","imagenObj","setImagenObj","buscarImagen","idImg","abrirDetalle","verDetalle","RemoveRedEye","setListaImagenes","cargarImagenes","FormularioCapitulo","IdNovela","cancelar","editor","useRef","setTitulo","setNumero","setCuerpo","guardarCapitulo","limpiar","readonly","onBlur","innerHTML","emision","setEmision","Switch","name","goBack","objCapitulo","setObjCapitulo","novelaId","setNovelaId","cap","cargarCapitulo","file","setFile","formData","FormData","append","acceptedFiles","dropzoneText","filesLimit","FormularioExtra","objeto","setNombre","descripcion","setDescripcion","submit","options","path","exact","listaNovelas","setListaNovelas","setIdNovela","novelaTitulo","setNovelaTitulo","cargarNovelas","FolderOpen","PermMedia","EditarNovela","CapitulosNovela","ImagenesNovela","CrearCapitulo","EditarCapitulo","CrearImagen","listaExtras","setListaExtras","objetoExtra","setObjetoExtra","idExtra","setIdExtra","dialogoCrear","setDialogoCrear","dialogoActualizar","setDialogoActualizar","dialogoBorrar","setDialogoBorrar","listarExtras","abrirDialogoCrear","abrirDialogoActualizar","abrirDialogoBorrar","Toolbar","option","extra","obj","dialogoBorrarExtra","Copyright","Date","getFullYear","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","login","inputs","URLSearchParams","session","logout","ToolbarMenu","abrirMenu","cerrarSesion","AppBar","clsx","IconButton","ExitToApp","mainListItems","LibraryBooksOutlined","MenuBookOutlined","PhotoLibrary","Divider","Category","LeftBar","cerrarMenu","Drawer","ChevronLeft","PrivateLayout","WrappedComponent","setOpen","Container","maxWidth","Grid","item","xs","Paper","Box","pt","Component","Index","AuthToken","token","decodedToken","email","exp","jwtDecode","isExpired","expiresAt","marginTop","avatar","form","Login","password","setInputs","setError","setLoading","auth","isValid","handleSubmit","set","handleInputChange","persist","Avatar","noValidate","justify","mt","App","ThemeProvider","CssBaseline","routes","route","render","isLocalhost","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6862a870.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n// Create a theme instance.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Titulo(props) {\r\n  return (\r\n    <Typography style={{marginBottom: '1rem', flexGrow: 1}} component=\"h2\" variant=\"h6\" color=\"primary\" noWrap>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitulo.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from \"react\"\r\nimport Titulo from '../components/common/Titulo';\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <>\r\n      <Titulo>Dashboard</Titulo>\r\n      Pagina de incio para mostrar el estado y resumen de la web y sus componentes.\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","export default {\r\n  //https://tno-v2.herokuapp.com/\r\n  urlApi: 'https://tno-v2.herokuapp.com/api/private',\r\n  web: 'https://tunovelaonline.com',\r\n  TOKEN_STORAGE_KEY: 'tno_cms.authToken'\r\n}","// eslint-disable-next-line no-unused-vars\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\nimport Cookie from \"js-cookie\";\r\nimport cogoToast from 'cogo-toast';\r\nimport constantes from '../config/constantes';\r\n\r\n/**\r\n * @param {AxiosRequestConfig} config\r\n*/\r\nexport const restAuth = async (config) => {\r\n  const closeLoading = cogoToast.loading('Iniciando sesión...', {\r\n    hideAfter: 0, position: 'top-right', role: \"success\"\r\n  });\r\n\r\n  const newAxiosRequest = axios.create({\r\n    baseURL: constantes.urlApi\r\n  });\r\n\r\n  return await newAxiosRequest(({...config})).then(({data}) => {\r\n    closeLoading.hide();\r\n    if (data && data.data) {\r\n      cogoToast.success(data.message, { position: 'top-right' })\r\n      // cogoToast.success('hola',{position: 'top-rigth'})\r\n      return ({data: data.data, errors: false});\r\n    } else {\r\n      cogoToast.error('No se puede obtener la data' ,{ position: 'top-right'})\r\n      throw Error(\"No se puede obtener la data\");\r\n    }\r\n  }).catch(err => {\r\n    closeLoading.hide();\r\n    if (err.response) {\r\n      console.log(err.response);\r\n      const errData = err.response.data;\r\n      cogoToast.warn( errData.message !== undefined ? errData.message : 'Error en la solicitud.',\r\n      { position: 'top-right'})\r\n      return {\r\n        data: false, \r\n        errors: errData\r\n      }\r\n    } else if (err.request) {\r\n      console.log(err.request);\r\n      cogoToast.warn(\"Se realizó la solicitud, pero no se recibió respuesta.\",\r\n      { position: 'top-right'})\r\n      throw err\r\n    } else {\r\n      cogoToast.error('Algo sucedió al configurar la solicitud que provocó un error.',\r\n      { position: 'top-right'})\r\n      throw err\r\n    }\r\n  })\r\n};\r\n\r\n/**\r\n * @param {AxiosRequestConfig} config\r\n*/\r\nexport const restPrivate = async (config) => {\r\n  const closeLoading = cogoToast.loading('Cargando...', {\r\n    hideAfter: 0, position: 'top-right', role: \"success\"\r\n  });\r\n\r\n  const newAxiosRequest = axios.create({\r\n    baseURL: constantes.urlApi,\r\n    headers: {\r\n      Authorization: 'Bearer ' + Cookie.get(constantes.TOKEN_STORAGE_KEY)\r\n    }\r\n  });\r\n\r\n  return await newAxiosRequest(({...config})).then(({data}) => {\r\n    closeLoading.hide();\r\n    cogoToast[data.status](data.message, { position: 'top-right' })\r\n    return (data);\r\n  }).catch(err => {\r\n    closeLoading.hide();\r\n    if (err.response) {\r\n      console.log(err.response);\r\n      const errData = err.response.data;\r\n      if (String(err.response.status) === \"401\") {\r\n        cogoToast.error('Token Invalido, cerrando sesión.',\r\n        { position: 'top-right'});\r\n        Cookie.remove(constantes.TOKEN_STORAGE_KEY);\r\n        document.location.href=\"/\";\r\n      } else {\r\n        cogoToast.warn( errData.message !== undefined ? errData.message : 'Error en la solicitud.',\r\n        { position: 'top-right'})\r\n      }\r\n      return {\r\n        data: {status:'error'}, \r\n        errors: errData\r\n      }\r\n    } else if (err.request) {\r\n      console.log(err.request);\r\n      cogoToast.warn(\"Se realizó la solicitud, pero no se recibió respuesta.\",\r\n      { position: 'top-right'})\r\n      throw err\r\n    } else {\r\n      cogoToast.error('Algo sucedió al configurar la solicitud que provocó un error.',\r\n      { position: 'top-right'})\r\n      throw err\r\n    }\r\n  })\r\n};","import { restPrivate } from './requestHelper';\r\n\r\n/**\r\n * @param {number} page\r\n * @param {number} limit\r\n */\r\nexport const getNovelas = async (params) => restPrivate({\r\n  url: 'novels', method: 'GET', params\r\n});\r\n/**\r\n * @param {string} id - id de la novela\r\n */\r\nexport const getNovela = async (id) => restPrivate({\r\n  url: `novels/${id}`, method: 'GET'\r\n});\r\n/**\r\n * @param {data} data - la data a enviar\r\n */\r\nexport const postNovelas = async (data) => restPrivate({\r\n  url: 'novels', method: 'POST', data\r\n})\r\n/**\r\n * @param {object} data - la data a enviar\r\n * @param {object} params - id, chapter, image, extencion, tipo (de imagen)\r\n * @param {string} metodo - actualizarNovela, actualizarCapituloEmision, actualizarImagenes, activarNovela\r\n */\r\nexport const patchNovelas = async (data, params,  metodo) => restPrivate({\r\n  url: 'novels', method: 'PATCH', data, params: { ...params}, headers: { Metodo: metodo}\r\n})\r\n/**\r\n * @param {string} idNovela\r\n */\r\nexport const deleteNovela = async (idNovela) => restPrivate({\r\n  url: 'novels', method: 'DELETE', params: {id: idNovela}, headers: {Metodo: 'borrarNovela'}\r\n})\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n  Button, Dialog, DialogActions,\r\n  DialogContent, DialogContentText, \r\n  DialogTitle, Slide\r\n} from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Dialogo({visible, abrir, titulo, cuerpo, accion}) {\r\n\r\n  return (\r\n    <Dialog\r\n      open={visible}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={abrir}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-slide-title\">{titulo}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-slide-description\">\r\n          {cuerpo}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={abrir} color=\"primary\">\r\n          Cancelar\r\n        </Button>\r\n        <Button onClick={accion} color=\"primary\">\r\n          Aceptar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nDialogo.propTypes = {\r\n  visible: PropTypes.bool,\r\n  abrir: PropTypes.func,\r\n  titulo: PropTypes.string,\r\n  cuerpo: PropTypes.string,\r\n  accion: PropTypes.func\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WithContext as ReactTags } from 'react-tag-input';\r\n\r\nconst delimiters = [188, 13];\r\n\r\nfunction Etiquetas({sugerencias=[], etiquetas=[], guardar}) {\r\n\r\n  const handleDelete = (i) => {\r\n    const tags = etiquetas.filter((tag, index) => index !== i);\r\n    guardar(tags);\r\n  }\r\n\r\n  const handleAddition = (tag) => {\r\n    const tags = [...etiquetas, tag]\r\n    guardar(tags);\r\n  }\r\n\r\n  const handleDrag = (tag, currPos, newPos) => {\r\n    const tags = etiquetas;\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    guardar(newTags);\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: 8 }} >\r\n      <ReactTags\r\n        tags={etiquetas}\r\n        suggestions={sugerencias}\r\n        delimiters={delimiters}\r\n        handleDelete={handleDelete}\r\n        handleAddition={handleAddition}\r\n        handleDrag={handleDrag}\r\n        autofocus={false}\r\n        inputFieldPosition=\"bottom\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nEtiquetas.propTypes = {\r\n  sugerencias: PropTypes.array,\r\n  etiquetas: PropTypes.array,\r\n  guardar: PropTypes.func\r\n}\r\n\r\nexport default Etiquetas\r\n\r\n","import { restPrivate } from './requestHelper';\r\n\r\n/**\r\n * Metodo para obtener todas los extras \r\n */\r\nexport const getExtras = async () =>  restPrivate({\r\n  url: 'extras/all', method: 'GET'\r\n});\r\n/**\r\n * @param {number} tipo - tipo del extra\r\n */\r\nexport const getExtra = async (tipo) =>  restPrivate({\r\n  url: 'extras', method: 'GET', params: { tipo }\r\n});\r\n/**\r\n * @param {object} data - nombre, descripcion y tipo\r\n */\r\nexport const postExtra = async (data) => restPrivate({\r\n  url: 'extras', method: 'POST', data\r\n});\r\n/**\r\n * @param {object} data - nombre, descripcion y tipo\r\n * @param {string} id - id del extra\r\n */\r\nexport const patchExtra = async (data, id) => restPrivate({\r\n  url: 'extras', method: 'PATCH', data: { data, id }, headers: { Metodo: 'actualizarExtra'}\r\n});\r\n/**\r\n * @param {string} id\r\n */\r\nexport const deleteExtra = async (id) => restPrivate({\r\n  url: 'extras', method: 'DELETE', params: {id}, headers: {Metodo: 'borrarExtra'}\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n  TextField, MenuItem, List, \r\n  ListItem, ListItemIcon, \r\n  Checkbox, ListItemText, Button \r\n} from '@material-ui/core';\r\n\r\nimport Etiquetas from './Etiquetas';\r\nimport { getExtras } from '../../services/apiExtras';\r\n\r\nfunction FormularioNovela({novela={}, guardar}) {\r\n  const [tipos, setTipos] = useState([]);\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [etiquetas, setEtiquetas] = useState([]);\r\n  const [objNovela, setObjNovela] = useState({\r\n    titulo: '',\r\n    titulo_alt: '',\r\n    acron: '',\r\n    autor: '',\r\n    sinopsis: '',\r\n    observacion: '',\r\n    estado: 'emision',\r\n    tipo: '',\r\n    categorias: [],\r\n    etiquetas: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    cargarExtras();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(novela).length > 0 ) {\r\n      setObjNovela({...novela})\r\n    }\r\n  },[novela])\r\n  //cargar los extras\r\n  async function cargarExtras() {\r\n    await getExtras().then(({data}) => {\r\n      if (data.length > 0) {\r\n        setTipos(data.filter(e => e.tipo === 1))\r\n        setCategorias(data.filter(e => e.tipo === 2))\r\n        setEtiquetas((data.filter(e => e.tipo === 3)).map(e => ({id:e.nombre,text:e.nombre})))\r\n      }\r\n    }).catch(error => console.log(error));\r\n  }\r\n\r\n  const seleccionarCategoria = (value) => () => {\r\n    const currentIndex = (objNovela.categorias).indexOf(value);\r\n    const newChecked = [...objNovela.categorias];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setObjNovela({...objNovela, categorias:[...newChecked]});\r\n  };\r\n\r\n  const guardarEtiquetas = (tags) => {\r\n    if(tags.length>0) setObjNovela({...objNovela, etiquetas: tags.map(e => e.text)})\r\n  };\r\n\r\n  const guardarNovela = async (e) => {\r\n    e.preventDefault();\r\n    await guardar(objNovela);\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\" style={{ marginRight: '1rem' }} onSubmit={guardarNovela}>\r\n      <div>\r\n        <TextField \r\n          required \r\n          fullWidth\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"titulo\" \r\n          label=\"Titulo\"\r\n          value={objNovela.titulo}\r\n          onChange={(e) => setObjNovela({...objNovela, titulo: e.target.value})}\r\n        />\r\n        <TextField \r\n          required \r\n          fullWidth\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"titulo_alt\" \r\n          label=\"Titulo Alternativo\" \r\n          value={objNovela.titulo_alt}\r\n          onChange={(e) => setObjNovela({...objNovela, titulo_alt: e.target.value})}\r\n        />\r\n        <TextField \r\n          required\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"acron\" \r\n          label=\"Acrónimo\"  \r\n          value={objNovela.acron}\r\n          onChange={(e) => setObjNovela({...objNovela, acron: e.target.value})}\r\n        />\r\n        <TextField \r\n          required\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"autor\" \r\n          fullWidth\r\n          label=\"Autor\" \r\n          value={objNovela.autor}\r\n          onChange={(e) => setObjNovela({...objNovela, autor: e.target.value})}\r\n        />\r\n        <TextField\r\n          required\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"estado\"\r\n          select\r\n          label=\"Estado\"\r\n          value={objNovela.estado}\r\n          onChange={(e) => setObjNovela({...objNovela, estado: e.target.value})}\r\n          helperText=\"Selecciona el estado de la novela\"\r\n        >\r\n          <MenuItem value=\"emision\">Emisión</MenuItem>\r\n          <MenuItem value=\"finalizado\">Finalizado</MenuItem>\r\n          <MenuItem value=\"cancelado\">Cancelado</MenuItem>\r\n        </TextField>\r\n        {/* TIPOS DE NOVELAS */}\r\n        {tipos.length > 0 &&\r\n          <TextField\r\n            required\r\n            style={{ margin: 8 }}\r\n            margin=\"dense\"\r\n            id=\"tipo\"\r\n            select\r\n            label=\"Tipo\"\r\n            value={objNovela.tipo}\r\n            onChange={(e) => setObjNovela({...objNovela, tipo: e.target.value})}\r\n            helperText=\"Selecciona el estado de la novela\"\r\n          >\r\n            {\r\n              tipos.map((e,i) => (\r\n                <MenuItem key={i} value={e.nombre}>{e.nombre}</MenuItem>\r\n              ))\r\n            }\r\n          </TextField>\r\n        }<br/>\r\n        {/* CATEGORIAS DE NOVELAS */}\r\n        {categorias.length > 0 &&\r\n          <List>\r\n          {categorias.map((c, i) => (\r\n            <ListItem key={i} dense button onClick={seleccionarCategoria(c.nombre)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={(objNovela.categorias).indexOf(c.nombre) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': c.nombre }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={c.nombre} primary={c.nombre} />\r\n            </ListItem>\r\n          ))\r\n            \r\n          }\r\n          </List>\r\n        }\r\n        {etiquetas.length > 0 &&\r\n          <Etiquetas\r\n            sugerencias={etiquetas}\r\n            etiquetas={(objNovela.etiquetas).length>0?(objNovela.etiquetas).map(e => ({id:e,text:e})):objNovela.etiquetas}\r\n            guardar={guardarEtiquetas}\r\n          />\r\n        }\r\n        <TextField\r\n          required\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"sinopsis\"\r\n          label=\"Sinopsis\"\r\n          multiline\r\n          fullWidth\r\n          rows={5}\r\n          placeholder=\"Sinopsis de la novela, usar etiqueta '<p></p>' para parrafos\"\r\n          variant=\"outlined\"\r\n          value={objNovela.sinopsis}\r\n          onChange={(e) => setObjNovela({...objNovela, sinopsis: e.target.value})}\r\n        />\r\n        <TextField\r\n          required\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"observacion\"\r\n          label=\"Observacion\"\r\n          multiline\r\n          fullWidth\r\n          rows={2}\r\n          placeholder=\"Observaciones\"\r\n          variant=\"outlined\"\r\n          value={objNovela.observacion}\r\n          onChange={(e) => setObjNovela({...objNovela, observacion: e.target.value})}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ margin: '1rem' }}\r\n        >Guardar</Button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nFormularioNovela.propTypes = {\r\n  novela: PropTypes.object,\r\n  guardar: PropTypes.func\r\n};\r\n\r\nexport default FormularioNovela;\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction AcordionTemplate({abierto, abrir, children, titulo, subtitulo, panel}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Accordion expanded={abierto === panel} onChange={abrir(panel)}>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id=\"panel1bh-header\"\r\n      >\r\n        <Typography className={classes.heading}>{titulo}</Typography>\r\n        <Typography className={classes.secondaryHeading}>{subtitulo}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n      {children}\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nAcordionTemplate.propTypes = {\r\n  abierto: PropTypes.any,\r\n  abrir: PropTypes.func,\r\n  titulo: PropTypes.string,\r\n  subtitulo: PropTypes.string,\r\n  panel: PropTypes.string\r\n}\r\n\r\nexport default AcordionTemplate\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography  } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction AcordionDetalles({novela}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography \r\n          className={classes.title} \r\n          color=\"textSecondary\" \r\n          gutterBottom\r\n        >\r\n          Subido Por:\r\n        </Typography>\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"h2\"\r\n          className={classes.pos} \r\n        >\r\n          {novela.subidoPor?novela.subidoPor.username:'-'}\r\n        </Typography>\r\n        <Typography \r\n          className={classes.title} \r\n          color=\"textSecondary\" \r\n          gutterBottom\r\n        >\r\n          Actualizado Por:\r\n        </Typography>\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"h2\"\r\n          className={classes.pos} \r\n        >\r\n          {novela.actualizadoPor?novela.actualizadoPor.username:'-'}\r\n        </Typography>\r\n        <Typography \r\n          className={classes.title} \r\n          color=\"textSecondary\" \r\n          gutterBottom\r\n        >\r\n          Fecha Creación:\r\n        </Typography>\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"h2\"\r\n          className={classes.pos} \r\n        >\r\n          {novela.createdAt?moment(novela.createdAt).format('DD-MM-YYYY'):'-'}\r\n        </Typography>\r\n        <Typography \r\n          className={classes.title} \r\n          color=\"textSecondary\" \r\n          gutterBottom\r\n        >\r\n          Fecha Actualizado:\r\n        </Typography>\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"h2\"\r\n          className={classes.pos} \r\n        >\r\n          {novela.updatedAt?moment(novela.updatedAt).format('DD-MM-YYYY'):'-'}\r\n        </Typography>\r\n        <Typography \r\n          className={classes.title} \r\n          color=\"textSecondary\" \r\n          gutterBottom\r\n        >\r\n          Rating:\r\n        </Typography>\r\n        <Typography \r\n          variant=\"h6\" \r\n          component=\"h2\"\r\n          className={classes.pos} \r\n        >\r\n          Contador: {novela.rating?novela.rating.contador:'-'}{` `}\r\n          Valor: {novela.rating?novela.rating.valor:'-'}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nAcordionDetalles.propTypes = {\r\n  novela: PropTypes.object\r\n}\r\n\r\nexport default AcordionDetalles\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport Brightness1TwoToneIcon from '@material-ui/icons/Brightness1TwoTone';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nfunction ActivarNovela({novela, activar}) {\r\n  return (\r\n    <div>\r\n      <Typography color=\"secondary\" style={{marginBottom: '1rem'}}>\r\n        En caso de borrar una novela y esta tenga capitulos o imagenes vinculados, entonces se pondrá en modo inactivo. Aqui puedes activarla de nuevo.\r\n      </Typography>\r\n      <div style={{margin: 'auto'}}>\r\n        <Brightness1TwoToneIcon style= {{color: novela.activo?green[500]:red[500]}}/>\r\n      </div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={activar}>\r\n        Activar\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nActivarNovela.propTypes = {\r\n  novela: PropTypes.object,\r\n  activar: PropTypes.func\r\n}\r\n\r\nexport default ActivarNovela\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography, FormControl, InputLabel, Select, MenuItem, FormHelperText, Button } from '@material-ui/core';\r\n\r\nfunction ListaImagenes({imagenes=[], actualizarImagen}) {\r\n  const [imagenSeleccionada, setImagenSeleccionada] = useState('');\r\n  const [tipo, setTipo] = useState('');\r\n\r\n  const guardarImagen = async () => {\r\n    if (imagenSeleccionada !== '') {\r\n      let img = imagenes[imagenSeleccionada];\r\n      await actualizarImagen(img.url, img.contentType, tipo);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography color=\"secondary\" style={{marginBottom: '1rem'}}>\r\n        Editar imagenes\r\n      </Typography>\r\n      <FormControl style={{minWidth: 120, margin: '1rem'}}>\r\n        <InputLabel id=\"seleccionar-imagen\">Imagen</InputLabel>\r\n        <Select\r\n          labelId=\"seleccionar-imagen\"\r\n          id=\"seleccion-imagen\"\r\n          value={imagenSeleccionada}\r\n          onChange={(e) => setImagenSeleccionada(e.target.value)}\r\n        >\r\n        {\r\n          imagenes.length > 0 ?\r\n          imagenes.map((imagen, i) => (\r\n            <MenuItem key={i} value={i}>{`${imagen.titulo} - ${imagen.tipo}`}</MenuItem>\r\n          ))\r\n          :\r\n          (<MenuItem value=\"nada\"><em>Sin datos</em></MenuItem>)\r\n        }\r\n        </Select>\r\n        <FormHelperText>Selecciona la imagen</FormHelperText>\r\n      </FormControl>\r\n      <FormControl style={{minWidth: 120, margin: '1rem'}}>\r\n        <InputLabel id=\"seleccionar-tipo\">Tipo</InputLabel>\r\n        <Select\r\n          labelId=\"seleccionar-tipo\"\r\n          id=\"seleccion-de-tipo\"\r\n          value={tipo}\r\n          onChange={(e) => setTipo(e.target.value)}\r\n        >\r\n          <MenuItem value=\"miniatura\">Miniatura</MenuItem>\r\n          <MenuItem value=\"portada\">Portada</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Selecciona el tipo de imagen</FormHelperText>\r\n      </FormControl><br/>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={guardarImagen}>\r\n        Guardar\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nListaImagenes.propTypes = {\r\n  novela: PropTypes.object,\r\n  imagenes: PropTypes.array,\r\n  actualizarImagen: PropTypes.func\r\n}\r\n\r\nexport default ListaImagenes\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Button, List, ListItem, ListItemText, MenuItem, Menu } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction ListaCapitulos({novela={}, capitulos=[], guardar}) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(null);\r\n\r\n  async function guardarCapitulo() {\r\n    if (capitulos.length>0 && selectedIndex !== null) {\r\n      await guardar(capitulos[selectedIndex]._id)\r\n    }\r\n  }\r\n\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography color=\"secondary\" style={{marginBottom: '1rem'}}>\r\n        Editar el capitulo en emisión\r\n      </Typography>\r\n      <List component=\"nav\" aria-label=\"Lista de Capitulos\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"lista de capitulos\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText primary=\"Lista de Capitulos\" secondary={\r\n            selectedIndex===null?\r\n              novela.capitulo_emision?`${novela.capitulo_emision.numero} - ${novela.capitulo_emision.titulo}`:'-'\r\n            :capitulos.length>0?`${capitulos[selectedIndex].numero} - ${capitulos[selectedIndex].titulo}`:'-'\r\n          } \r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <Menu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n      {capitulos.length > 0 ?\r\n        capitulos.map((capitulo, index) => (\r\n          <MenuItem\r\n            key={capitulo._id}\r\n            selected={index === selectedIndex}\r\n            onClick={(event) => handleMenuItemClick(event, index)}\r\n          >\r\n            {capitulo.numero} - {capitulo.titulo}\r\n          </MenuItem>\r\n        ))\r\n        :\r\n        <MenuItem>Sin datos.</MenuItem>\r\n      }\r\n      </Menu>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={guardarCapitulo}>\r\n        Guardar\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nListaCapitulos.propTypes = {\r\n  novela: PropTypes.object,\r\n  capitulos: PropTypes.array,\r\n  guardar: PropTypes.func\r\n}\r\n\r\nexport default ListaCapitulos\r\n\r\n","import { restPrivate } from './requestHelper';\r\n\r\n/**\r\n * @param {string} idCapitulo\r\n */\r\nexport const getCapitulo = async (idCapitulo) => restPrivate({\r\n  url: `chapters/chapter/${idCapitulo}`, method: 'GET'\r\n});\r\n/**\r\n * @param {number} page \r\n * @param {number} limit \r\n */\r\nexport const getCapitulos = async(page, limit) => restPrivate({\r\n  url: 'chapters', method: 'GET', params: {page, limit}\r\n})\r\n/**\r\n * @param {number} page\r\n * @param {number} limit\r\n * @param {string} novela\r\n */\r\nexport const getCapitulosNovela = async (page, limit, novela) => restPrivate({\r\n  url: 'chapters/novel', method: 'GET', params: {page, limit, novela}\r\n});\r\n/**\r\n * @param {string} id\r\n */\r\nexport const getCapitulosLista = async (id) => restPrivate({\r\n  url: 'chapters/list', method: 'GET', params:{id}\r\n})\r\n/**\r\n * @param {object} data - La data a enviar\r\n */\r\nexport const postCapitulo = async (data) => restPrivate({\r\n  url: 'chapters', method: 'POST', data\r\n})\r\n/**\r\n * @param {id} id id de l capitulo\r\n * @param {data} data data del capitulo a actualizar\r\n */\r\nexport const patchCapitulo = async (id, data) => restPrivate({\r\n  url: 'chapters', method: 'PATCH', data: {data, id}, headers:{ Metodo: 'actualizarCapitulo'}\r\n})\r\n/**\r\n * @param {string} idCapitulo\r\n */\r\nexport const deleteCapitulo = async (idCapitulo) => restPrivate({\r\n  url: 'chapters', method: 'DELETE', params: { id: idCapitulo }, headers: { Metodo: 'borrarCapitulo' }\r\n})","import { restPrivate } from \"./requestHelper\"\r\n\r\n/**\r\n * @param {number} page \r\n * @param {number} limit \r\n */\r\nexport const getImages = async (page, limit) => restPrivate({\r\n  url: 'images', method: 'GET', params: {page, limit}\r\n});\r\n//----------------------------------------------------------------------------------------//\r\n/**\r\n * @param {number} page \r\n * @param {number} limit \r\n * @param {string} novela \r\n */\r\nexport const getImagesNovel = async (page, limit, novela) => restPrivate({\r\n  url: 'images/novel', method: 'GET', params: {page, limit, novela}\r\n});\r\n//----------------------------------------------------------------------------------------//\r\n/**\r\n * @param {string} novela \r\n */\r\nexport const getImagesLista = async (novela) => restPrivate({\r\n  url: 'images/list', method: 'GET', params: { novela }\r\n})\r\n//----------------------------------------------------------------------------------------//\r\n/**\r\n * @param {string} id \r\n */\r\nexport const getImage = async (id) => restPrivate({\r\n  url: `images/image/${id}`, method: 'GET'\r\n})\r\n//----------------------------------------------------------------------------------------//\r\n/**\r\n * @param {object} data \r\n */\r\nexport const postImagen = async(data) => restPrivate({\r\n  url: 'images', method: 'POST', data, headers: { 'Content-Type': 'multipart/form-data' }\r\n})\r\n//----------------------------------------------------------------------------------------//\r\n/**\r\n * @param {string} idImagen\r\n * @param {string} keyImg\r\n */\r\nexport const deleteImagen = async (idImagen, keyImg) => restPrivate({\r\n  url: 'images', method: 'DELETE', params: { id: idImagen, key: keyImg }, headers: { Metodo: 'borrarImagen' }\r\n})","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\n\r\nimport FormularioNovela from '../../components/novelas/FormularioNovela';\r\nimport Titulo from '../../components/common/Titulo';\r\nimport AcordionTemplate from '../../components/novelas/AcordionTemplate';\r\nimport AcordionDetalles from '../../components/novelas/AcordionDetalles';\r\nimport ActivarNovela from '../../components/novelas/ActivarNovela';\r\nimport ListaImagenes from '../../components/novelas/ListaImagenes';\r\nimport ListaCapitulos from '../../components/novelas/ListaCapitulos';\r\n\r\nimport { getNovela, patchNovelas } from '../../services/apiNovelas';\r\nimport { getCapitulosLista } from '../../services/apiCapitulos';\r\nimport { getImagesLista } from '../../services/apiImagenes';\r\n\r\n\r\nfunction Editar({match}) {\r\n  const history = useHistory();\r\n  const [novela, setNovela] = useState({});\r\n  const [capitulos, setCapitulos] = useState([]);\r\n  const [imagenes, setImagenes] = useState([]);\r\n  const [abierto, setAbierto] = useState(false);\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    console.log(id);\r\n    if(id) {\r\n      cargarNovela(id);\r\n      cargarListaCapitulos(id);\r\n      cargarListaImagenes(id);\r\n    }\r\n  },[id]);\r\n\r\n  async function cargarNovela(idNovela) {\r\n    await getNovela(idNovela)\r\n      .then(({data}) => {\r\n        if (Object.entries(data).length>0) {\r\n          setNovela(data)\r\n        }\r\n      })\r\n  }\r\n\r\n  async function cargarListaCapitulos(idNovela) {\r\n    await getCapitulosLista(idNovela)\r\n      .then(({data}) => {\r\n        if (data.length>0) {\r\n          setCapitulos(data)\r\n        }\r\n      })\r\n  }\r\n\r\n  async function cargarListaImagenes(idNovela) {\r\n    await getImagesLista(idNovela).then(({data}) => {\r\n      if(data.length>0) {\r\n        setImagenes(data);\r\n      }\r\n    })\r\n  }\r\n\r\n  async function actualizarNovela(data) {\r\n    await patchNovelas(data, {id}, 'actualizarNovela')\r\n      .then(() => history.push('/cms/novela'))\r\n  }\r\n\r\n  async function actualizarCapituloEmision(idCapitulo) {\r\n    await patchNovelas(null, { id, chapter: idCapitulo}, 'actualizarCapituloEmision')\r\n  }\r\n  /**\r\n   * @param {string} image url de la imagen\r\n   * @param {string} extencion ext de la imagen\r\n   * @param {string} tipo miniatura o portada\r\n   */\r\n  async function actualizarImagen(image,extencion,tipo) {\r\n    await patchNovelas(null, { id, image, extencion, tipo }, 'actualizarImagenes')\r\n  }\r\n\r\n  async function activarNovela() {\r\n    await patchNovelas(null, {id}, 'activarNovela');\r\n  }\r\n\r\n  const abrir = (panel) => (event, isExpanded) => {\r\n    setAbierto(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Editar Novela</Titulo>\r\n      <FormularioNovela\r\n        guardar={actualizarNovela}\r\n        novela={novela}\r\n      />\r\n      <AcordionTemplate\r\n        abierto={abierto}\r\n        abrir={abrir}\r\n        titulo=\"Detalles\"\r\n        subtitulo=\"Datos extras de la novela\"\r\n        panel=\"panel1\"\r\n      >\r\n        <AcordionDetalles\r\n          novela={novela}\r\n        />\r\n      </AcordionTemplate>\r\n      <AcordionTemplate\r\n        abierto={abierto}\r\n        abrir={abrir}\r\n        titulo=\"Emisión\"\r\n        subtitulo=\"Editar Capitulo en emisión\"\r\n        panel=\"panel2\"\r\n      >\r\n        <ListaCapitulos\r\n          novela={novela}\r\n          capitulos={capitulos}\r\n          guardar={actualizarCapituloEmision}\r\n        />\r\n      </AcordionTemplate>\r\n      <AcordionTemplate\r\n        abierto={abierto}\r\n        abrir={abrir}\r\n        titulo=\"Imagenes\"\r\n        subtitulo=\"Editar imagenes de portada y miniatura\"\r\n        panel=\"panel3\"\r\n      >\r\n        <ListaImagenes\r\n          imagenes={imagenes}\r\n          actualizarImagen={actualizarImagen}\r\n        />\r\n      </AcordionTemplate>\r\n      <AcordionTemplate\r\n        abierto={abierto}\r\n        abrir={abrir}\r\n        titulo=\"Configuracion\"\r\n        subtitulo=\"Activar novela\"\r\n        panel=\"panel4\"\r\n      >\r\n        <ActivarNovela\r\n          novela={novela}\r\n          activar={activarNovela}\r\n        />\r\n      </AcordionTemplate>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withRouter(Editar)\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { Button, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, ButtonGroup, TableFooter, TablePagination } from '@material-ui/core';\r\nimport { red, cyan } from '@material-ui/core/colors';\r\nimport { Edit, Delete } from '@material-ui/icons';\r\n\r\nimport Dialogo from '../common/Dialogo';\r\n\r\nfunction TablaCapitulos({\r\n  listaCapitulos=[], \r\n  total=1, \r\n  rowsPerPage=30, \r\n  page=0, \r\n  cambiarPagina, \r\n  cambiarLimite, \r\n  borrarCapitulo}) {\r\n  const [capituloTitulo, setCapituloTitulo] = useState('');\r\n  const [idCapitulo, setIdCapitulo] = useState('');\r\n  const [dialogoVisible, setDialogoVisible] = useState(false);\r\n\r\n  async function eliminar() {\r\n    await borrarCapitulo(idCapitulo);\r\n    abrirDialogo();\r\n  }\r\n  //funcion para abrir el cuadro de eliminar\r\n  const abrirDialogo = () => setDialogoVisible(!dialogoVisible);\r\n  //funciones para manejar el cuadro de confirmacion\r\n  const confirmarBorrado = (idCap, titulo) => {\r\n    setCapituloTitulo(titulo)\r\n    setIdCapitulo(idCap);\r\n    abrirDialogo();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{maxHeight: 500}}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">Capitulo</TableCell>\r\n              <TableCell>Titulo</TableCell>\r\n              <TableCell>Novela</TableCell>\r\n              <TableCell align=\"center\">Subido Por</TableCell>\r\n              <TableCell align=\"center\">Actualizado Por</TableCell>\r\n              <TableCell align=\"center\">Actualizado</TableCell>\r\n              <TableCell align=\"center\">Acciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {listaCapitulos.length > 0 ?\r\n            listaCapitulos.map((capitulo, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell align=\"center\">{capitulo.numero}</TableCell>\r\n                <TableCell>{capitulo.titulo}</TableCell>\r\n                <TableCell>{capitulo.novela?capitulo.novela.titulo?capitulo.novela.titulo:'-':'-'}</TableCell>\r\n                <TableCell align=\"center\">{capitulo.subidoPor?capitulo.subidoPor.username:'-'}</TableCell>\r\n                <TableCell align=\"center\">{capitulo.actualizadoPor?capitulo.actualizadoPor.username:'-'}</TableCell>\r\n                <TableCell align=\"center\">{moment(capitulo.updatedAt).format('DD-MM-YYYY')}</TableCell>\r\n                <TableCell>\r\n                  <ButtonGroup size=\"small\">\r\n                    <Button component={Link} to={`/cms/capitulo/editar/${capitulo._id}`} params={{ id: capitulo._id }}>\r\n                      <Edit style={{ color: cyan[500] }}/>   \r\n                    </Button>\r\n                    <Button onClick={() => confirmarBorrado(capitulo._id, capitulo.titulo)}>\r\n                      <Delete style={{ color: red[500] }} />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n            :\r\n            <TableRow style={{ height: 120 }}>\r\n              <TableCell>Sin datos.</TableCell>\r\n            </TableRow>\r\n          }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Table>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[30, 50, 100]}\r\n              colSpan={3}\r\n              count={total}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={cambiarPagina}\r\n              onChangeRowsPerPage={cambiarLimite}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n      {/* DIALOGO PARA ELIMINAR CAPITULO */}\r\n      <Dialogo\r\n        titulo={`Eliminar '${capituloTitulo}'`}\r\n        cuerpo=\"Esta acción no se puede deshacer.\"\r\n        abrir={abrirDialogo}\r\n        visible={dialogoVisible}\r\n        accion={eliminar}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nTablaCapitulos.propTypes = {\r\n  listaCapitulos: PropTypes.array,\r\n  total: PropTypes.number,\r\n  rowsPerPage: PropTypes.number,\r\n  page: PropTypes.number,\r\n  cambiarPagina: PropTypes.func,\r\n  cambiarLimite: PropTypes.func,\r\n  borrarCapitulo: PropTypes.func,\r\n}\r\n\r\nexport default TablaCapitulos\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button } from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { AddCircle } from '@material-ui/icons';\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport TablaCapitulos from '../../components/capitulos/TablaCapitulos';\r\nimport { getCapitulosNovela, deleteCapitulo } from '../../services/apiCapitulos';\r\n\r\nfunction ListaCapitulos({match}) {\r\n  const [listaCapitulos, setListaCapitulos] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(30);\r\n  const [total, setTotal] = useState(1);\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      cargarCapitulos(1, 30, id);\r\n    }\r\n  },[id]);\r\n  //funcion para cargar la lista paginada de capitulos\r\n  async function cargarCapitulos(p, l, n) {\r\n    await getCapitulosNovela(p, l, n).then(({data}) => {\r\n      if (data.docs && (data.docs).length > 0) {\r\n        setListaCapitulos(data.docs);\r\n        setTotal(data.totalDocs);\r\n      } else {\r\n        console.log('sin caps')\r\n      }\r\n    }).catch((error) => console.log(error));\r\n  }\r\n  //funcion para eliminar el capitulo\r\n  async function borrarCapitulo(idCap) {\r\n    if (idCap) {\r\n      return await deleteCapitulo(idCap)\r\n      .then(async () => {\r\n        await cargarCapitulos(Number(page)+1, rowsPerPage, id);\r\n      }) \r\n    } \r\n  }\r\n  //funciones para manejar el paginado\r\n  const cambiarPagina = async (event, newPage) => {\r\n    setPage(newPage);\r\n    await cargarCapitulos(Number(newPage)+1, rowsPerPage, id);\r\n  };\r\n\r\n  const cambiarLimite = async (event) => {\r\n    let limite = parseInt(event.target.value, 10);\r\n    setRowsPerPage(limite);\r\n    setPage(0);\r\n    await cargarCapitulos(1, limite, id)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Lista de Capitulos</Titulo>\r\n      <Button \r\n        component={Link}\r\n        to={`/cms/capitulo/crear/${id}`}\r\n        params={{ id: id }}\r\n        variant=\"contained\" \r\n        startIcon={<AddCircle/>} \r\n        style={{marginBottom: '.5rem', backgroundColor: green[500], color: 'white'}}\r\n      >\r\n        Nuevo\r\n      </Button>\r\n      <TablaCapitulos\r\n        listaCapitulos={listaCapitulos}\r\n        total={total}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite}\r\n        borrarCapitulo={borrarCapitulo}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withRouter(ListaCapitulos);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n  Button, Dialog, DialogActions,\r\n  DialogContent, DialogTitle,\r\n  CircularProgress, Card, CardMedia,\r\n  CardContent, Typography\r\n} from '@material-ui/core';\r\n\r\nfunction DialogoImagen({visible, abrir, imagen={}, loading}) {\r\n  const [alto, setAlto] = useState(100);\r\n  const [ancho, setAncho] = useState(100);\r\n\r\n  useEffect(() => {\r\n    if(imagen.url !== undefined && imagen.url !== null) {\r\n      let img = new Image();\r\n      img.src = imagen.url;\r\n      img.onload = function() {\r\n        setAlto(this.height);\r\n        setAncho(this.width);\r\n      }\r\n    }\r\n  },[imagen]);\r\n\r\n  return (\r\n    <Dialog\r\n      open={visible}\r\n      onClose={abrir}\r\n      aria-labelledby=\"detalle-imagen\"\r\n      aria-describedby=\"detalle-imagen-seleccionada\"\r\n    >\r\n      <DialogTitle id=\"detalle-imagen\">{\"Detalle de la imagen\"}</DialogTitle>\r\n      <DialogContent>\r\n      {loading?\r\n        <CircularProgress />\r\n        :\r\n        <Card>\r\n          <CardMedia\r\n            style={{height: alto, width: ancho}}\r\n            image={imagen.url}\r\n            title={imagen.titulo}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {imagen.titulo}\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">Tipo:</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{imagen.tipo}</Typography>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">Extención:</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{imagen.contentType}</Typography>\r\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\">Key:</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{imagen.key}</Typography>\r\n          </CardContent>\r\n        </Card>\r\n      }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={abrir} color=\"primary\" autoFocus>\r\n          Aceptar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nDialogoImagen.propTypes = {\r\n  visible: PropTypes.bool,\r\n  abrir: PropTypes.func,\r\n  imagen: PropTypes.object,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nexport default DialogoImagen\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { \r\n  Button, TableContainer, Table, \r\n  TableHead, TableRow, TableCell, \r\n  TableBody, TableFooter, TablePagination, ButtonGroup \r\n} from '@material-ui/core';\r\nimport { red, green} from '@material-ui/core/colors';\r\nimport { Delete, RemoveRedEye } from '@material-ui/icons';\r\n\r\nimport Dialogo from '../common/Dialogo';\r\nimport DialogoImagen from './DialogoImagen';\r\nimport { getImage } from '../../services/apiImagenes';\r\n\r\nfunction TablaImagenes({\r\n  listaImagenes=[], \r\n  total=1, \r\n  rowsPerPage=30, \r\n  page=0, \r\n  cambiarPagina, \r\n  cambiarLimite,\r\n  borrarImagen}) {\r\n  const [imagenTitulo, setImagenTitulo] = useState('');\r\n  const [idImagen, setIdImagen] = useState(null);\r\n  const [keyImagen, setKeyImagen] = useState(null)\r\n  const [dialogoVisible, setDialogoVisible] = useState(false);\r\n  const [detalleVisible, setDetalleVisible] = useState(false);\r\n  const [loadingImagen, setLoadingImagen] = useState(false);\r\n  const [imagenObj, setImagenObj] = useState({})\r\n\r\n  async function eliminar() {\r\n    await borrarImagen(idImagen, keyImagen);\r\n    abrirDialogo();\r\n  }\r\n\r\n  async function buscarImagen(idImg) {\r\n    if (idImg !== null && idImg !== undefined) {\r\n      setLoadingImagen(true)\r\n      await getImage(idImg).then(({data}) => {\r\n        setImagenObj(data);\r\n        setLoadingImagen(false);\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        setLoadingImagen(false);\r\n      });\r\n    }\r\n  }\r\n  //funcion para abrir el cuadro de eliminar\r\n  const abrirDialogo = () => setDialogoVisible(!dialogoVisible);\r\n  const abrirDetalle = () => setDetalleVisible(!detalleVisible);\r\n  //funciones para manejar el cuadro de confirmacion\r\n  const confirmarBorrado = (idImg, keyImg, titulo) => {\r\n    setImagenTitulo(titulo);\r\n    setKeyImagen(keyImg)\r\n    setIdImagen(idImg);\r\n    abrirDialogo();\r\n  }\r\n  //funcion para abrir el detalle de la imagen\r\n  const verDetalle = async (idImg) => {\r\n    await buscarImagen(idImg)\r\n    abrirDetalle();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer style={{maxHeight: 500}}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Titulo</TableCell>\r\n              <TableCell>Tipo</TableCell>\r\n              <TableCell align=\"center\">Novela</TableCell>\r\n              <TableCell align=\"center\">Subido Por</TableCell>\r\n              <TableCell align=\"center\">Actualizado</TableCell>\r\n              <TableCell align=\"center\">Acciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {listaImagenes.length > 0 ?\r\n            listaImagenes.map((imagen, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{imagen.titulo}</TableCell>\r\n                <TableCell>{imagen.tipo}</TableCell>\r\n                <TableCell>{imagen.novela?imagen.novela.titulo?imagen.novela.titulo:'-':'-'}</TableCell>\r\n                <TableCell align=\"center\">{imagen.subidoPor?imagen.subidoPor.username:'-'}</TableCell>\r\n                <TableCell align=\"center\">{moment(imagen.updatedAt).format('DD-MM-YYYY')}</TableCell>\r\n                <TableCell>\r\n                  <ButtonGroup>\r\n                    <Button onClick={() => verDetalle(imagen._id)}>\r\n                      <RemoveRedEye style={{ color: green[500] }}/>\r\n                    </Button>\r\n                    <Button onClick={() => confirmarBorrado(imagen._id, imagen.key, imagen.titulo)}>\r\n                      <Delete style={{ color: red[500] }} />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n            :\r\n            <TableRow style={{ height: 120 }}>\r\n              <TableCell>Sin datos.</TableCell>\r\n            </TableRow>\r\n          }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Table>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[30, 50, 100]}\r\n              colSpan={3}\r\n              count={total}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={cambiarPagina}\r\n              onChangeRowsPerPage={cambiarLimite}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n      {/* DIALOGO PARA ELIMINAR CAPITULO */}\r\n      <Dialogo\r\n        titulo={`Eliminar '${imagenTitulo}'`}\r\n        cuerpo=\"Esta acción no se puede deshacer.\"\r\n        abrir={abrirDialogo}\r\n        visible={dialogoVisible}\r\n        accion={eliminar}\r\n      />\r\n      {/* DIALOGO PARA VER EL DETALLE DE LA IMAGEN */}\r\n      <DialogoImagen\r\n        visible={detalleVisible}\r\n        abrir={abrirDetalle}\r\n        imagen={imagenObj}\r\n        loading={loadingImagen}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nTablaImagenes.propTypes = {\r\n  listaImagenes: PropTypes.array,\r\n  borrarImagen: PropTypes.func,\r\n}\r\n\r\nexport default TablaImagenes\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core';\r\nimport { AddCircle } from '@material-ui/icons';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport TablaImagenes from '../../components/imagenes/TablaImagenes';\r\nimport { getImagesNovel, deleteImagen } from '../../services/apiImagenes';\r\n\r\nfunction ListaImagenes({match}) {\r\n  const [listaImagenes, setListaImagenes] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(30);\r\n  const [total, setTotal] = useState(1);\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      cargarImagenes(1, 30, id);\r\n    }\r\n  },[id]);\r\n\r\n  async function cargarImagenes(p, l, n) {\r\n    await getImagesNovel(p, l, n).then(({data}) => {\r\n      if (data.docs && (data.docs).length > 0) {\r\n        setListaImagenes(data.docs);\r\n        setTotal(data.totalDocs);\r\n      }\r\n    })\r\n  }\r\n  //funcion para eliminar la imagen\r\n  async function borrarImagen(idImg, keyImg) {\r\n    if (idImg && keyImg) {\r\n      return await deleteImagen(idImg, keyImg)\r\n      .then(async () => {\r\n        await cargarImagenes(Number(page)+1, rowsPerPage, id);\r\n      }) \r\n    } \r\n  }\r\n  //funciones para manejar el paginado\r\n  const cambiarPagina = async (event, newPage) => {\r\n    setPage(newPage);\r\n    await cargarImagenes(Number(newPage)+1, rowsPerPage, id);\r\n  };\r\n\r\n  const cambiarLimite = async (event) => {\r\n    let limite = parseInt(event.target.value, 10);\r\n    setRowsPerPage(limite);\r\n    setPage(0);\r\n    await cargarImagenes(1, limite, id)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Lista de Imagenes</Titulo>\r\n      <Button \r\n        component={Link}\r\n        to={`/cms/imagen/crear/${id}`}\r\n        params={{ id: id }}\r\n        variant=\"contained\" \r\n        startIcon={<AddCircle/>} \r\n        style={{marginBottom: '.5rem', backgroundColor: green[500], color: 'white'}}\r\n      >\r\n        Nuevo\r\n      </Button>\r\n      <TablaImagenes\r\n        listaImagenes={listaImagenes}\r\n        total={total}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite}\r\n        borrarImagen={borrarImagen}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withRouter(ListaImagenes)\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport JoditEditor from 'jodit-react';\r\n\r\nfunction FormularioCapitulo({IdNovela, capitulo={}, guardar, cancelar}) {\r\n  const editor = useRef(null)\r\n  const [titulo, setTitulo] = useState('');\r\n  const [numero, setNumero] = useState(1);\r\n  const [cuerpo, setCuerpo] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(capitulo).length > 0) {\r\n      setTitulo(capitulo.titulo?capitulo.titulo:'');\r\n      setNumero(capitulo.numero?capitulo.numero:1);\r\n      setCuerpo(capitulo.cuerpo?capitulo.cuerpo:'');\r\n    }\r\n  },[capitulo])\r\n\r\n  const guardarCapitulo = async (e) => {\r\n    e.preventDefault();\r\n    if (IdNovela) {\r\n      await guardar({titulo, numero, cuerpo, novela: IdNovela})\r\n      limpiar();\r\n    } else {\r\n      console.log('no se reconoce el id de la novela')\r\n    }\r\n    \r\n  }\r\n\r\n  const guardarContenido = (e) => {\r\n    setCuerpo(e.target.innerHTML)\r\n  }\r\n\r\n  const limpiar = () => {\r\n    setTitulo('');\r\n    setNumero(Number(numero)+1);\r\n    setCuerpo('');\r\n  }\r\n\r\n  return (\r\n    <form autoComplete=\"off\" style={{ marginRight: '1rem' }} onSubmit={guardarCapitulo}>\r\n      <div>\r\n        <TextField \r\n          required \r\n          fullWidth\r\n          autoFocus\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"titulo_capitulo\" \r\n          label=\"Titulo\"\r\n          value={titulo}\r\n          onChange={(e) => setTitulo(e.target.value)}\r\n        />\r\n        <TextField \r\n          required \r\n          fullWidth\r\n          style={{ margin: 8 }}\r\n          type=\"number\"\r\n          margin=\"dense\"\r\n          id=\"numero\" \r\n          label=\"Número del Capitulo\" \r\n          value={numero}\r\n          onChange={(e) => setNumero(e.target.value)}\r\n        />\r\n        <JoditEditor\r\n          ref={editor}\r\n          value={cuerpo}\r\n          config={{ readonly: false}}\r\n          onBlur={guardarContenido}\r\n        />\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        style={{ margin: '1rem' }}\r\n      >\r\n        Guardar\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{ margin: '1rem 0rem', backgroundColor: red[500], color: 'white' }}\r\n        onClick={cancelar}\r\n      >\r\n        Cancelar\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nFormularioCapitulo.propTypes = {\r\n  IdNovela: PropTypes.string,\r\n  capitulo: PropTypes.object\r\n}\r\n\r\nexport default FormularioCapitulo\r\n\r\n","import React, { useState } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { Switch } from '@material-ui/core';\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport FormularioCapitulo from '../../components/capitulos/FormularioCapitulo';\r\nimport { postCapitulo } from '../../services/apiCapitulos';\r\nimport { patchNovelas } from '../../services/apiNovelas';\r\n\r\nfunction CrearCapitulo({match}) {\r\n  const history = useHistory();\r\n  const [emision, setEmision] = useState(false);\r\n  const { id } = match.params;\r\n\r\n  async function guardarCapitulo(data) {\r\n    return await postCapitulo(data).then(async({data}) => {\r\n      if (emision && data) {\r\n        return await patchNovelas(null, {id: id, chapter: data._id}, 'actualizarCapituloEmision')\r\n          .then(() => setEmision(false));\r\n      } else {\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n  const cancelarForm = () => history.goBack();\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Crear Capitulo</Titulo>\r\n      <p>Capitulo en Emisión</p>\r\n      <Switch\r\n        checked={emision}\r\n        onChange={e => setEmision(e.target.checked)}\r\n        color=\"primary\"\r\n        name=\"emision\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      <FormularioCapitulo\r\n        IdNovela={id}\r\n        guardar={guardarCapitulo}\r\n        cancelar={cancelarForm}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withRouter(CrearCapitulo);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { Switch } from '@material-ui/core';\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport FormularioCapitulo from '../../components/capitulos/FormularioCapitulo';\r\nimport { getCapitulo, patchCapitulo } from '../../services/apiCapitulos';\r\nimport { patchNovelas } from '../../services/apiNovelas';\r\n\r\nfunction EditarCapitulo({match}) {\r\n  const history = useHistory();\r\n  const [emision, setEmision] = useState(false);\r\n  const [objCapitulo, setObjCapitulo] = useState({});\r\n  const [novelaId, setNovelaId] = useState(null);\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      cargarCapitulo(id);\r\n    }\r\n  },[id]);\r\n\r\n  async function cargarCapitulo(cap) {\r\n    await getCapitulo(cap)\r\n      .then(({data}) => {\r\n        if (Object.entries(data).length > 0) {\r\n          setObjCapitulo(data);\r\n          setNovelaId(data.novela?data.novela._id:null);\r\n        }\r\n      }).catch((error) => console.log(error));\r\n  }\r\n\r\n  async function actualizarCapitulo(objCapitulo) {\r\n    if (id && objCapitulo) {\r\n      return await patchCapitulo(id, objCapitulo).then(async({data}) => {\r\n        if (emision && data) {\r\n          return await patchNovelas(null, {id: novelaId, chapter: data._id}, 'actualizarCapituloEmision')\r\n            .then(() => {\r\n              setEmision(false);\r\n              history.goBack();\r\n            });\r\n        } else {\r\n          return true\r\n        }\r\n      });\r\n    };\r\n  }\r\n\r\n  const cancelarForm = () => history.goBack();\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Editar Capitulo</Titulo>\r\n      <p>Capitulo en Emisión</p>\r\n      <Switch\r\n        checked={emision}\r\n        onChange={e => setEmision(e.target.checked)}\r\n        color=\"primary\"\r\n        name=\"emision\"\r\n        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n      />\r\n      <FormularioCapitulo\r\n        IdNovela={novelaId}\r\n        capitulo={objCapitulo}\r\n        guardar={actualizarCapitulo}\r\n        cancelar={cancelarForm}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default withRouter(EditarCapitulo);\r\n","import React, { useState } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { TextField, MenuItem, Button } from '@material-ui/core';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\n\r\nimport { postImagen } from '../../services/apiImagenes';\r\n\r\nfunction CrearImagen({match}) {\r\n  const history = useHistory();\r\n  const [titulo, setTitulo] = useState('');\r\n  const [tipo, setTipo] = useState('miniatura');\r\n  const [file, setFile] = useState(null);\r\n  const { id } = match.params;\r\n\r\n  async function guardarImagen(e) {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData();\r\n\r\n    if (id && file) {\r\n      formData.append('titulo', titulo);\r\n      formData.append('tipo', tipo);\r\n      formData.append('novela', id);\r\n      formData.append('file', file);\r\n\r\n      await postImagen(formData).then(() => history.goBack());\r\n    }\r\n  }\r\n\r\n  const cancelarForm = () => history.goBack();\r\n\r\n  return (\r\n    <form autoComplete=\"off\" style={{ marginRight: '1rem' }} onSubmit={guardarImagen}>\r\n      <div>\r\n        <TextField \r\n          required \r\n          fullWidth\r\n          autoFocus\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"titulo\" \r\n          label=\"Titulo\"\r\n          value={titulo}\r\n          onChange={(e) => setTitulo(e.target.value)}\r\n        />\r\n        <TextField\r\n          required\r\n          style={{ margin: 8 }}\r\n          margin=\"dense\"\r\n          id=\"tipo\"\r\n          select\r\n          label=\"Tipo\"\r\n          value={tipo}\r\n          onChange={(e) => setTipo(e.target.value)}\r\n          helperText=\"Selecciona el tipo de imagen\"\r\n        >\r\n          <MenuItem value=\"miniatura\">Miniatura</MenuItem>\r\n          <MenuItem value=\"portada\">Portada</MenuItem>\r\n          <MenuItem value=\"wallpaper\">Wallpaper</MenuItem>\r\n        </TextField>\r\n        <DropzoneArea\r\n          acceptedFiles={['image/*']}\r\n          dropzoneText={\"Arrastra y suela la imagen a subir\"}\r\n          onChange={(file) => setFile(file[0])}\r\n          filesLimit={1}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ margin: '1rem' }}\r\n        >Guardar</Button>\r\n        <Button\r\n          onClick={cancelarForm}\r\n          variant=\"contained\"\r\n          style={{ color: 'white', backgroundColor: red[500] }}\r\n        >Cancelar</Button>\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default withRouter(CrearImagen)\r\n","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TextField, MenuItem, Button, Dialog, DialogTitle, DialogContent } from '@material-ui/core';\r\n\r\nfunction FormularioExtra({accion, objeto={}, guardar, abrir, visible}) {\r\n  const [nombre, setNombre] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n  const [tipo, setTipo] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if(objeto.nombre !== undefined) {\r\n      setNombre(objeto.nombre);\r\n      setDescripcion(objeto.descripcion);\r\n      setTipo(objeto.tipo);\r\n    }\r\n  },[objeto]);\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    await guardar({nombre, descripcion, tipo});\r\n    limpiar();\r\n  };\r\n\r\n  const limpiar = () => {\r\n    setNombre('');\r\n    setDescripcion('');\r\n    setTipo(1);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={abrir} aria-labelledby=\"simple-dialog-title\" open={visible}>\r\n      <DialogTitle id=\"simple-dialog-title\">{accion}</DialogTitle>\r\n      <DialogContent>\r\n        <form autoComplete=\"off\" style={{ marginRight: '1rem' }} onSubmit={submit}>\r\n          <div>\r\n            <TextField \r\n              required \r\n              fullWidth\r\n              style={{ margin: 8 }}\r\n              id=\"nombre\" \r\n              label=\"Nombre\" \r\n              value={nombre}\r\n              onChange={(e) => setNombre(e.target.value)}\r\n            />\r\n            <TextField \r\n              required \r\n              fullWidth\r\n              style={{ margin: 8 }}\r\n              id=\"descripcion\" \r\n              label=\"Descripción\" \r\n              value={descripcion}\r\n              onChange={(e) => setDescripcion(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              style={{ margin: 8 }}\r\n              id=\"tipo\"\r\n              select\r\n              label=\"Selecciona\"\r\n              value={tipo}\r\n              onChange={(e) => setTipo(e.target.value)}\r\n            >\r\n              <MenuItem value={1}>Tipo</MenuItem>\r\n              <MenuItem value={2}>Categoria</MenuItem>\r\n              <MenuItem value={3}>Etiqueta</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: '1rem' }}\r\n          >\r\n            Guardar\r\n          </Button>\r\n          <Button\r\n            onClick={abrir}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n          >\r\n            Cancelar\r\n          </Button>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nFormularioExtra.propTypes = {\r\n  accion: PropTypes.string,\r\n  objeto: PropTypes.object,\r\n  guardar: PropTypes.func,\r\n  abrir: PropTypes.func,\r\n  visible: PropTypes.bool\r\n}\r\n\r\nexport default FormularioExtra\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { \r\n  Table, TableContainer, TableHead, \r\n  TableBody, TableRow, TableCell, \r\n  ButtonGroup, Button, Toolbar,\r\n  List, ListItem, ListItemText,\r\n  Menu, MenuItem\r\n} from '@material-ui/core';\r\nimport { green, cyan, red } from '@material-ui/core/colors';\r\nimport { AddCircle, Edit, Delete } from '@material-ui/icons';\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport Dialogo from '../../components/common/Dialogo';\r\nimport FormularioExtra from '../../components/extras/FormularioExtra';\r\nimport { getExtra, postExtra, deleteExtra, patchExtra } from '../../services/apiExtras';\r\n\r\nconst options = [\r\n  'Tipos',\r\n  'Categorias',\r\n  'Etiquetas',\r\n];\r\n\r\nexport default function Index() {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [listaExtras, setListaExtras] = useState([]);\r\n  const [objetoExtra, setObjetoExtra] = useState({});\r\n  const [idExtra, setIdExtra] = useState(null);\r\n  const [nombre, setNombre] = useState(null);\r\n  const [dialogoCrear, setDialogoCrear] = useState(false);\r\n  const [dialogoActualizar, setDialogoActualizar] = useState(false);\r\n  const [dialogoBorrar, setDialogoBorrar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    listarExtras(0);\r\n  },[]);\r\n  //funcion para cargar los extras\r\n  async function listarExtras(tipo) {\r\n    await getExtra(Number(tipo)+1).then((data) => {\r\n      setListaExtras(data.data)\r\n    }).catch((error) => console.log(error));\r\n  }\r\n  //funcion para crear nuevo extra\r\n  async function crearExtra(data) {\r\n    await postExtra(data).then(async() => {\r\n      abrirDialogoCrear()\r\n      await listarExtras(selectedIndex);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      abrirDialogoCrear()\r\n    })\r\n  }\r\n  //funcion para actualizar el objeto\r\n  async function actualizarExtra(data) {\r\n    await patchExtra(data, idExtra).then(async() => {\r\n      abrirDialogoActualizar()\r\n      await listarExtras(selectedIndex);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      abrirDialogoActualizar()\r\n    })\r\n  }\r\n  //funcion para borrar el objeto\r\n  async function borrarExtra() {\r\n    await deleteExtra(idExtra).then(async() => {\r\n      setDialogoBorrar(false);\r\n      await listarExtras(selectedIndex);\r\n    }).catch((error) => {\r\n      setDialogoBorrar(false);\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  //funciones para manejar el toolbar\r\n  const handleClickListItem = (event) => setAnchorEl(event.currentTarget);\r\n  const handleClose = () => setAnchorEl(null);\r\n  const handleMenuItemClick = async (event, index) => {\r\n    setSelectedIndex(index);\r\n    await listarExtras(index);\r\n    setAnchorEl(null);\r\n  };\r\n  //funciones para abrir los dialogos\r\n  const abrirDialogoCrear = () => setDialogoCrear(!dialogoCrear);\r\n  const abrirDialogoActualizar = () => setDialogoActualizar(!dialogoActualizar);\r\n  const abrirDialogoBorrar = () => setDialogoBorrar(!dialogoBorrar);\r\n  //manejar el dialogo para actualizar\r\n  const dialogoActualizarExtra = (obj) => {\r\n    setObjetoExtra(obj);\r\n    setIdExtra(obj._id);\r\n    abrirDialogoActualizar();\r\n  }\r\n  //manejar el dialogo para eliminar\r\n  const dialogoBorrarExtra = (id, nombre) => {\r\n    setIdExtra(id);\r\n    setNombre(nombre);\r\n    abrirDialogoBorrar();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar>\r\n        <Titulo>Lista de Extras</Titulo>\r\n        <List component=\"nav\" aria-label=\"Tipos de extras\">\r\n          <ListItem\r\n            button\r\n            aria-haspopup=\"true\"\r\n            aria-controls=\"lock-menu\"\r\n            aria-label=\"seleccionar extra\"\r\n            onClick={handleClickListItem}\r\n          >\r\n            <ListItemText primary=\"Seleccionar extra\" secondary={options[selectedIndex]} />\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={Boolean(anchorEl)}\r\n          onClose={handleClose}\r\n        >\r\n          {options.map((option, index) => (\r\n            <MenuItem\r\n              key={option}\r\n              selected={index === selectedIndex}\r\n              onClick={(event) => handleMenuItemClick(event, index)}\r\n            >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </Toolbar>\r\n      <Button \r\n        variant=\"contained\" \r\n        startIcon={<AddCircle/>} \r\n        style={{marginBottom: '.5rem', backgroundColor: green[500], color: 'white'}}\r\n        onClick={abrirDialogoCrear}\r\n      >\r\n        Nuevo\r\n      </Button>\r\n      <TableContainer style={{maxHeight: 500}}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>#</TableCell>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Descripcion</TableCell>\r\n              <TableCell>Acrualizado</TableCell>\r\n              <TableCell align=\"center\">Acciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {listaExtras.length > 0 ?\r\n            listaExtras.map((extra, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{i+1}</TableCell>\r\n                <TableCell>{extra.nombre}</TableCell>\r\n                <TableCell>{extra.descripcion}</TableCell>\r\n                <TableCell>{moment(extra.updatedAt).format('DD-MM-YYYY')}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <ButtonGroup size=\"small\">\r\n                    <Button onClick={() => dialogoActualizarExtra(extra)}>\r\n                      <Edit style={{ color: cyan[500] }}/>\r\n                    </Button>\r\n                    <Button onClick={() => dialogoBorrarExtra(extra._id, extra.nombre)}>\r\n                      <Delete style={{ color: red[500] }} />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n            :\r\n            <TableRow style={{ height: 120 }}>\r\n              <TableCell>Sin datos.</TableCell>\r\n            </TableRow>\r\n          }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {/* DIALOGO PARA CREAR NUEVO EXTRA */}\r\n      <FormularioExtra\r\n        key=\"Crear\"\r\n        accion=\"Crear\"\r\n        abrir={abrirDialogoCrear}\r\n        visible={dialogoCrear}\r\n        guardar={crearExtra}\r\n      />\r\n      {/* DIALOGO PARA ACTUALIZAR EL OBJETO */}\r\n      <FormularioExtra\r\n        key=\"Actualizar\"\r\n        accion=\"Actualizar\"\r\n        objeto={objetoExtra}\r\n        abrir={abrirDialogoActualizar}\r\n        visible={dialogoActualizar}\r\n        guardar={actualizarExtra}\r\n      />\r\n      {/* DIALOGO PARA ACTUALIZAR NUEVO EXTRA */}\r\n      <Dialogo\r\n        titulo={`Eliminar '${nombre}'`}\r\n        cuerpo=\"Esta acción eliminará el objeto seleccionado.\"\r\n        abrir={abrirDialogoBorrar}\r\n        visible={dialogoBorrar}\r\n        accion={borrarExtra}\r\n      />\r\n      \r\n      \r\n    </div>\r\n  )\r\n}\r\n","// Route Views\r\nimport Dashboard from './views/dashboard';\r\n//---------------------NOVELAS----------------------------------------------//\r\nimport Novelas from './views/novelas';\r\nimport CrearNovela from './views/novelas/crear';\r\nimport EditarNovela from './views/novelas/editar';\r\nimport CapitulosNovela from './views/novelas/capitulos';\r\nimport ImagenesNovela from './views/novelas/imagenes';\r\n//---------------------CAPITULOS----------------------------------------------//\r\nimport Capitulos from './views/capitulos';\r\nimport CrearCapitulo from './views/capitulos/crear';\r\nimport EditarCapitulo from './views/capitulos/editar';\r\n//---------------------IMAGENES----------------------------------------------//\r\nimport Imagenes from './views/imagenes';\r\nimport CrearImagen from './views/imagenes/crear';\r\n//---------------------EXTRAS----------------------------------------------//\r\nimport Extras from './views/extras';\r\n\r\nexport default [\r\n  {\r\n    path: \"/cms/dashboard\",\r\n    exact: true,\r\n    component: Dashboard,\r\n  },\r\n  {\r\n    path: '/cms/novela',\r\n    exact: true,\r\n    component: Novelas\r\n  },\r\n  {\r\n    path: '/cms/novela/crear',\r\n    exact: true,\r\n    component: CrearNovela\r\n  },\r\n  {\r\n    path: '/cms/novela/editar/:id',\r\n    exact: true,\r\n    component: EditarNovela\r\n  },\r\n  {\r\n    path: '/cms/novela/capitulos/:id',\r\n    exact: true,\r\n    component: CapitulosNovela\r\n  },\r\n  {\r\n    path: '/cms/novela/imagenes/:id',\r\n    exact: true,\r\n    component: ImagenesNovela\r\n  },\r\n  //capitulos\r\n  {\r\n    path: '/cms/capitulo',\r\n    exact: true,\r\n    component: Capitulos\r\n  },\r\n  {\r\n    path: '/cms/capitulo/crear/:id',\r\n    exact: true,\r\n    component: CrearCapitulo\r\n  },\r\n  {\r\n    path: '/cms/capitulo/editar/:id',\r\n    exact: true,\r\n    component: EditarCapitulo\r\n  },\r\n  //imagenes\r\n  {\r\n    path: '/cms/imagen',\r\n    exact: true,\r\n    component: Imagenes\r\n  },\r\n  {\r\n    path: '/cms/imagen/crear/:id',\r\n    exact: true,\r\n    component: CrearImagen\r\n  },\r\n  //extras \r\n  {\r\n    path: '/cms/extra',\r\n    exact: true,\r\n    component: Extras\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { \r\n  Table, TableContainer, TablePagination,\r\n  TableHead, TableBody, TableFooter, \r\n  TableRow, TableCell, ButtonGroup, Button,  \r\n} from '@material-ui/core';\r\nimport { green, cyan, red } from '@material-ui/core/colors';\r\nimport { AddCircle, FolderOpen, PermMedia, Edit, Delete } from '@material-ui/icons';\r\n\r\nimport { getNovelas, deleteNovela } from '../../services/apiNovelas';\r\nimport Titulo from '../../components/common/Titulo';\r\nimport Dialogo from '../../components/common/Dialogo';\r\n\r\nexport default function Novelas() {\r\n  const [listaNovelas, setListaNovelas] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [total, setTotal] = useState(1);\r\n  const [dialogoVisible, setDialogoVisible] = useState(false);\r\n  const [idNovela, setIdNovela] = useState(null);\r\n  const [novelaTitulo, setNovelaTitulo] = useState('')\r\n\r\n  useEffect(() => {\r\n    cargarNovelas(1,10);\r\n  },[]);\r\n  //cargar las novelas\r\n  async function cargarNovelas(p,l) {\r\n    await getNovelas({page: p, limit: l}).then(({data}) => {\r\n      if (data.docs && (data.docs).length > 0) {\r\n        setListaNovelas(data.docs);\r\n        setTotal(data.totalDocs);\r\n      }\r\n    }).catch((error) => console.log(error));\r\n  }\r\n  //borrar novela\r\n  async function borrarNovela() {\r\n    if (idNovela) {\r\n      await deleteNovela(idNovela).then(async() => {\r\n        abrirDialogo();\r\n        await cargarNovelas(Number(page)+1, rowsPerPage);\r\n      });\r\n    } else {\r\n      abrirDialogo();\r\n    }\r\n  }\r\n\r\n  const cambiarPagina = async (event, newPage) => {\r\n    setPage(newPage);\r\n    await cargarNovelas(Number(newPage)+1, rowsPerPage);\r\n  };\r\n\r\n  const cambiarLimite = async (event) => {\r\n    let limite = parseInt(event.target.value, 10);\r\n    setRowsPerPage(limite);\r\n    setPage(0);\r\n    await cargarNovelas(1, limite)\r\n  };\r\n  //funcion para manejar el estado del dialogo\r\n  const abrirDialogo = () => setDialogoVisible(!dialogoVisible);\r\n  //funcion para guardar la id de la novela y abrir el dialogo\r\n  const confirmarBorrado = (id, titulo) => {\r\n    setNovelaTitulo(titulo)\r\n    setIdNovela (id);\r\n    abrirDialogo();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Lista de Novelas</Titulo>\r\n      <Button \r\n        component={Link}\r\n        to=\"/cms/novela/crear\"\r\n        variant=\"contained\" \r\n        startIcon={<AddCircle/>} \r\n        style={{marginBottom: '.5rem', backgroundColor: green[500], color: 'white'}}\r\n      >\r\n        Nuevo\r\n      </Button>\r\n      <TableContainer style={{maxHeight: 500}}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>#</TableCell>\r\n              <TableCell>Titulo</TableCell>\r\n              <TableCell>Tipo</TableCell>\r\n              <TableCell>Estado</TableCell>\r\n              <TableCell align=\"center\">Activo</TableCell>\r\n              <TableCell align=\"center\">Capitulo Emisión</TableCell>\r\n              <TableCell>Actualizado</TableCell>\r\n              <TableCell align=\"center\">Folder</TableCell>\r\n              <TableCell align=\"center\">Acciones</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {listaNovelas.length > 0 ?\r\n            listaNovelas.map((novela, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{i+1}</TableCell>\r\n                <TableCell>{novela.titulo}</TableCell>\r\n                <TableCell>{novela.tipo}</TableCell>\r\n                <TableCell>{novela.estado}</TableCell>\r\n                <TableCell align=\"center\">{novela.activo? 'Si':'No'}</TableCell>\r\n                <TableCell align=\"center\">{novela.capitulo_emision?novela.capitulo_emision.numero:'-'}</TableCell>\r\n                <TableCell>{moment(novela.updatedAt).format('DD-MM-YYYY')}</TableCell>\r\n                <TableCell>\r\n                  <ButtonGroup size=\"small\">\r\n                    <Button component={Link} to={`/cms/novela/capitulos/${novela._id}`} params={{ id: novela._id }}>\r\n                      <FolderOpen color=\"secondary\"/>\r\n                    </Button>\r\n                    <Button component={Link} to={`/cms/novela/imagenes/${novela._id}`} params={{ id: novela._id }}>\r\n                      <PermMedia color=\"primary\" />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <ButtonGroup size=\"small\">\r\n                    <Button component={Link} to={`/cms/novela/editar/${novela._id}`} params={{ id: novela._id }}>\r\n                      <Edit style={{ color: cyan[500] }}/>\r\n                    </Button>\r\n                    <Button onClick={() => confirmarBorrado(novela._id, novela.titulo)}>\r\n                      <Delete style={{ color: red[500] }} />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n            :\r\n            <TableRow style={{ height: 120 }}>\r\n              <TableCell>Sin datos.</TableCell>\r\n            </TableRow>\r\n          }\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Table>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 50, 100]}\r\n              colSpan={3}\r\n              count={total}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={cambiarPagina}\r\n              onChangeRowsPerPage={cambiarLimite}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n      {/* DIALOGO PARA ELIMINAR NOVELA */}\r\n      <Dialogo\r\n        titulo={`Eliminar '${novelaTitulo}'`}\r\n        cuerpo=\"Esta acción eliminará la novela de la base de datos, si la novela tiene capitulos o imagenes vinculadas se pondra en estado 'inactivo'.\"\r\n        abrir={abrirDialogo}\r\n        visible={dialogoVisible}\r\n        accion={borrarNovela}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Titulo from '../../components/common/Titulo'\r\nimport FormularioNovela from '../../components/novelas/FormularioNovela'\r\n\r\nimport { postNovelas } from '../../services/apiNovelas';\r\n\r\nexport default function Crear() {\r\n  const history = useHistory();\r\n\r\n  async function crearNovela(data) {\r\n    if (Object.entries(data).length > 0) {\r\n      await postNovelas(data)\r\n        .then(() => history.push('/cms/novela'))\r\n        .catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Crear Novela</Titulo>\r\n      <FormularioNovela\r\n        guardar={crearNovela}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport TablaCapitulos from '../../components/capitulos/TablaCapitulos';\r\nimport { deleteCapitulo, getCapitulos } from '../../services/apiCapitulos';\r\n\r\n\r\nexport default function Capitulos() {\r\n  const [listaCapitulos, setListaCapitulos] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(30);\r\n  const [total, setTotal] = useState(1);\r\n\r\n  useEffect(() => {\r\n    cargarCapitulos(1, 30);\r\n  },[]);\r\n  //funcion para cargar la lista paginada de capitulos\r\n  async function cargarCapitulos(p, l) {\r\n    await getCapitulos(p, l).then(({data}) => {\r\n      if (data.docs && (data.docs).length > 0) {\r\n        setListaCapitulos(data.docs);\r\n        setTotal(data.totalDocs);\r\n      }\r\n    }).catch((error) => console.log(error));\r\n  }\r\n  //funcion para eliminar el capitulo\r\n  async function borrarCapitulo(idCap) {\r\n    if (idCap) {\r\n      return await deleteCapitulo(idCap)\r\n      .then(async () => {\r\n        await cargarCapitulos(Number(page)+1, rowsPerPage);\r\n      }) \r\n    } \r\n  }\r\n  //funciones para manejar el paginado\r\n  const cambiarPagina = async (event, newPage) => {\r\n    setPage(newPage);\r\n    await cargarCapitulos(Number(newPage)+1, rowsPerPage);\r\n  };\r\n\r\n  const cambiarLimite = async (event) => {\r\n    let limite = parseInt(event.target.value, 10);\r\n    setRowsPerPage(limite);\r\n    setPage(0);\r\n    await cargarCapitulos(1, limite)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Ultimos Capitulos Agregados</Titulo>\r\n      <TablaCapitulos\r\n        listaCapitulos={listaCapitulos}\r\n        total={total}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite}\r\n        borrarCapitulo={borrarCapitulo}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport Titulo from '../../components/common/Titulo';\r\nimport TablaImagenes from '../../components/imagenes/TablaImagenes';\r\nimport { getImages, deleteImagen } from '../../services/apiImagenes';\r\n\r\nexport default function ListaImagenes() {\r\n  const [listaImagenes, setListaImagenes] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(30);\r\n  const [total, setTotal] = useState(1);\r\n\r\n  useEffect(() => {\r\n    cargarImagenes(1, 30);\r\n  },[]);\r\n\r\n  async function cargarImagenes(p, l, n) {\r\n    await getImages(p, l).then(({data}) => {\r\n      if (data.docs && (data.docs).length > 0) {\r\n        setListaImagenes(data.docs);\r\n        setTotal(data.totalDocs);\r\n      }\r\n    })\r\n  }\r\n  //funcion para eliminar la imagen\r\n  async function borrarImagen(idImg, keyImg) {\r\n    if (idImg && keyImg) {\r\n      return await deleteImagen(idImg, keyImg)\r\n      .then(async () => {\r\n        await cargarImagenes(Number(page)+1, rowsPerPage);\r\n      }) \r\n    } \r\n  }\r\n  //funciones para manejar el paginado\r\n  const cambiarPagina = async (event, newPage) => {\r\n    setPage(newPage);\r\n    await cargarImagenes(Number(newPage)+1, rowsPerPage);\r\n  };\r\n\r\n  const cambiarLimite = async (event) => {\r\n    let limite = parseInt(event.target.value, 10);\r\n    setRowsPerPage(limite);\r\n    setPage(0);\r\n    await cargarImagenes(1, limite)\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Titulo>Ultimas Imagenes Agregadas</Titulo>\r\n      <TablaImagenes\r\n        listaImagenes={listaImagenes}\r\n        total={total}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite}\r\n        borrarImagen={borrarImagen}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link, Typography } from \"@material-ui/core\";\r\nimport constantes from \"../../config/constantes\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href={constantes.web}>\r\n        TuNovelaOnline\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default useStyles;","import { restAuth, restPrivate } from './requestHelper'\r\n\r\nexport const login = async (inputs) =>  restAuth({\r\n  url: 'auth/login', method: 'POST', data: new URLSearchParams(inputs)\r\n});\r\n\r\nexport const session = async () => restPrivate({\r\n  url: 'auth/session', method: 'GET'\r\n});\r\n\r\nexport const logout = async () => restPrivate({\r\n  url: 'auth/logout', method: 'GET'\r\n});","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport Cookie from \"js-cookie\";\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport { Menu, ExitToApp } from '@material-ui/icons';\r\n\r\nimport useStyles from './stylesLayout';\r\nimport { logout } from '../../services/apiUsuario';\r\nimport constantes from '../../config/constantes';\r\n\r\nexport default function ToolbarMenu({abrirMenu, open}) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const cerrarSesion = async () => {\r\n    await logout().then(async() => {//cerró sesion correctamente\r\n      Cookie.remove(constantes.TOKEN_STORAGE_KEY);\r\n      history.push('/cms/login');\r\n    }).catch(error => {\r\n      console.log(error);\r\n      console.log('Error cerrando sesión.')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={abrirMenu}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <Menu />\r\n        </IconButton>\r\n        {/* ELEMENTO VACIO PARA ACOMODAR EL ICONO LOGOUT EN LA ESQUINA DERECHA */}\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}/>\r\n        <IconButton color=\"inherit\" onClick={cerrarSesion}>\r\n          <ExitToApp />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\r\nimport { Dashboard, LibraryBooksOutlined, MenuBookOutlined, PhotoLibrary, Category } from '@material-ui/icons';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button component={Link} to=\"/cms/dashboard\">\r\n      <ListItemIcon>\r\n        <Dashboard />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/cms/novela\">\r\n      <ListItemIcon>\r\n        <LibraryBooksOutlined />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Novelas\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/cms/capitulo\">\r\n      <ListItemIcon>\r\n        <MenuBookOutlined />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Capitulos\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to=\"/cms/imagen\">\r\n      <ListItemIcon>\r\n        <PhotoLibrary />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Imagenes\" />\r\n    </ListItem>\r\n    <Divider/>\r\n    <ListItem button component={Link} to=\"/cms/extra\">\r\n      <ListItemIcon>\r\n        <Category />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Extras\" />\r\n    </ListItem>\r\n  </div>\r\n);","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Drawer, Divider, IconButton, List, Typography } from '@material-ui/core';\r\nimport { ChevronLeft } from '@material-ui/icons';\r\n\r\nimport useStyles from './stylesLayout';\r\nimport { mainListItems } from './ListaMenu';\r\n\r\nexport default function LeftBar({cerrarMenu, open}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <Typography component=\"h1\" variant=\"h6\" align=\"center\" color=\"inherit\" noWrap className={classes.title}>\r\n          TNO CPanel\r\n        </Typography>\r\n        <IconButton onClick={cerrarMenu}>\r\n          <ChevronLeft />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>{mainListItems}</List>\r\n      <Divider />\r\n    </Drawer>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Box, Grid, Paper} from '@material-ui/core';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Copyright from '../common/Copyright';\r\nimport useStyles from './stylesLayout';\r\nimport Toolbar from './Toolbar';\r\nimport LeftBar from './LeftBar';\r\nimport PrivateLayout from '../common/PrivateLayout';\r\n\r\nfunction Layout({children}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar\r\n        abrirMenu={handleDrawerOpen}\r\n        open={open}\r\n      />\r\n      <LeftBar\r\n        cerrarMenu={handleDrawerClose}\r\n        open={open}\r\n      />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                {children}\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container> \r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivateLayout(Layout);","import React, { Component } from \"react\";\r\nimport Cookie from \"js-cookie\";\r\n// import { AuthToken } from \"../../services/authToken\";\r\nimport constantes from \"../../config/constantes\";\r\nimport { session } from \"../../services/apiUsuario\";\r\n\r\nexport default function PrivateRoute(WrappedComponent) {\r\n  \r\n  return class extends Component {    \r\n    async componentDidMount() {\r\n      const token = Cookie.get(constantes.TOKEN_STORAGE_KEY);\r\n      if (!token) {\r\n        document.location.href = ('/cms/login');\r\n      } else {\r\n        await session().then((data) => {\r\n          if(data.status === 'error') {\r\n            Cookie.remove(constantes.TOKEN_STORAGE_KEY);\r\n            document.location.href = ('/cms/login');\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n          console.log('error de sesion en (PrivateRoutes)');\r\n        });\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props}/>;\r\n    }\r\n  };\r\n};","import React from 'react'\r\n\r\nexport default function Index() {\r\n  return (\r\n    <div>\r\n      Por aqui no\r\n    </div>\r\n  )\r\n}\r\n","import jwtDecode from \"jwt-decode\";\r\n\r\nexport class AuthToken {\r\n  constructor(token) {\r\n    this.decodedToken = { email: \"\", exp: 0 };\r\n    try {\r\n      if (token) this.decodedToken = jwtDecode(token);\r\n    } catch (e) {\r\n      console.log('Error');\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  get isValid() {\r\n    return !this.isExpired;\r\n  }\r\n\r\n  get expiresAt() {\r\n    return new Date(this.decodedToken.exp * 1000);\r\n  }\r\n\r\n  get isExpired() {\r\n    return new Date() > this.expiresAt;\r\n  }\r\n\r\n  get authorizationString() {\r\n    return `Bearer ${this.token}`;\r\n  }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookie from \"js-cookie\";\r\n// import ServerCookie from \"next-cookies\";\r\nimport { \r\n  CircularProgress, Avatar, Button,\r\n  TextField, Box, Typography,\r\n  Container, Grid\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Copyright from \"../components/common/Copyright\";\r\nimport { login } from '../services/apiUsuario'\r\nimport constantes from \"../config/constantes\";\r\nimport { AuthToken } from \"../services/authToken\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [inputs, setInputs] = useState({ username: \"\", password: \"\" });\r\n  const [error, setError] = useState({ username: false, password: false });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = Cookie.get(constantes.TOKEN_STORAGE_KEY);\r\n    const auth = new AuthToken(token);\r\n    if (token || auth.isValid) {\r\n      history.push(\"/cms/dashboard\");\r\n    }\r\n  //eslint-disable-next-line\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    await login(inputs).then(({data, errors}) => {\r\n      setLoading(false);\r\n      if (!data) {\r\n        return setError(errors);\r\n      } else {\r\n        Cookie.set(constantes.TOKEN_STORAGE_KEY, data);\r\n        history.push('/cms/dashboard');\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n      return setLoading(false);\r\n    })\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    setInputs({\r\n      ...inputs,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          TNO Cms\r\n        </Typography>\r\n        <form className={classes.form} noValidate={false} onSubmit={handleSubmit}>\r\n          <TextField\r\n            onChange={handleInputChange}\r\n            value={inputs.username}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Usuario\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            //errores\r\n            error={error.username?true:false}\r\n            helperText={error.username}\r\n          />\r\n          <TextField\r\n            onChange={handleInputChange}\r\n            value={inputs.password}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            //errores\r\n            error={error.password?true:false}\r\n            helperText={error.password}\r\n          />\r\n          {\r\n            loading ? \r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n              <CircularProgress  color=\"primary\" className={classes.submit}/>\r\n            </Grid>\r\n            :\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Acceder\r\n            </Button>\r\n          }\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport './App.css';\n\nimport theme from './config/theme';\nimport routes from './routes';\nimport Layout from './components/layout';\nimport Index from './views';\nimport Login from './views/login';\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Index} />\n          <Route exact path=\"/cms/login\" component={Login}/>\n          <Layout>\n          {routes.map((route, index) => {\n            return (\n              <Route \n                key={index}\n                path={route.path}\n                exact={route.exact}\n                render={props => (<route.component {...props}/>)}\n              />\n            )\n          })}\n          </Layout>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>,\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}